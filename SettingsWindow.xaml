<Window x:Class="TensorMine.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TensorMine"
        mc:Ignorable="d"
        Title="TensorMine : Настройки"
        Width="803" Height="363"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner" Initialized="Window_Initialized" Closing="Window_Closing">


    <Border Width="803" Height="363" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Background="Black" CornerRadius="14" BorderThickness="3" BorderBrush="White">
        <Grid>
            <Border Width="720" Height="360" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Background="#1f1f1f">
                <Grid>
                    <Border x:Name="Violation" Width="670" Height="310" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Background="#2e2e2e" CornerRadius="10" BorderThickness="0" BorderBrush="White">
                        <Grid>
                            <Label HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,-260,0,0" Content="Версия:" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold" Foreground="White" FontSize="16"/>
                            <Border Width="190" Height="45" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,-185,0,0" Background="#e06b15" CornerRadius="10" BorderThickness="3" BorderBrush="White">
                                <Grid>
                                    <TextBlock x:Name="VersionTextBlock" Width="175" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Text="Classic" Background="Transparent" Foreground="White" FontSize="22" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold"/>
                                    <CheckBox x:Name="VersionButton" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="100,0,0,0" IsChecked="False" BorderThickness="3" BorderBrush="White" Background="Transparent" Style="{DynamicResource SwitchStyle}" Checked="VersionButton_Checked" Unchecked="VersionButton_Unchecked" />
                                </Grid>
                            </Border>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,-80,0,0" Content="Ультра-графика:" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold" Foreground="White" FontSize="16"/>
                            <Border Width="190" Height="45" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,-5,0,0" Background="#e06b15" CornerRadius="10" BorderThickness="3" BorderBrush="White">
                                <Border.ToolTip>
                                    <ToolTip Width="235" BorderThickness="3" BorderBrush="Black" Background="White">
                                        <StackPanel>
                                            <TextBlock Text="Экспериментальная функция" Foreground="Black" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold" TextWrapping="Wrap" FontSize="15"/>
                                            <Viewbox Height="7"/>
                                            <TextBlock Text="Не рекомендуем включать этот параметр, если у вас меньше 12ГБ оперативной памяти." Foreground="Black" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="Regular" TextWrapping="Wrap"/>
                                        </StackPanel>
                                    </ToolTip>
                                </Border.ToolTip>
                                <Grid>
                                    <TextBlock x:Name="ExtraGraphicsTextBlock" Width="175" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Text="Выключено" Background="Transparent" Foreground="White" FontSize="22" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold"/>
                                    <CheckBox x:Name="ExtraGraphicsButton" Width="20" Height="20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="140,0,0,0" IsChecked="False" BorderThickness="3" BorderBrush="White" Background="Transparent" Style="{DynamicResource CheckBoxStyle}" Checked="ExtraGraphicsButton_Checked" Unchecked="ExtraGraphicsButton_Unchecked"/>
                                </Grid>
                            </Border>

                            <Label HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-80,78,0" Content="Сохранение:" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold" Foreground="White" FontSize="16"/>
                            <Border Width="190" Height="45" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-5,0,0" Background="#e06b15" CornerRadius="10" BorderThickness="3" BorderBrush="White">
                                <Grid>
                                    <TextBlock x:Name="CookieTextBlock" Width="175" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Text="Включено" Background="Transparent" Foreground="White" FontSize="22" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold"/>
                                    <CheckBox x:Name="CookieButton" Width="20" Height="20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="140,0,0,0" IsChecked="True" BorderThickness="3" BorderBrush="White" Background="Transparent" Style="{DynamicResource CheckBoxStyle}" Checked="CookieButton_Checked" Unchecked="CookieButton_Unchecked"/>
                                </Grid>
                            </Border>

                            <Label HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-260,80,0" Content="Кол-во ОЗУ:" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold" Foreground="White" FontSize="16"/>
                            <Border Width="190" Height="45" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-185,0,0" Background="#e06b15" CornerRadius="10" BorderThickness="3" BorderBrush="White">
                                <Grid>
                                    <TextBox x:Name="RAMTextBox" Width="165" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Text="1024" Background="Transparent" BorderThickness="0" Foreground="White" FontSize="22" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold" MaxLength="5" PreviewTextInput="RAMTextBox_PreviewTextInput"/>
                                </Grid>
                            </Border>

                            <Label HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,-80,157,0" Content="Звук:" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold" Foreground="White" FontSize="16"/>
                            <Border Width="190" Height="45" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,-5,20,0" Background="#e06b15" CornerRadius="10" BorderThickness="3" BorderBrush="White">
                                <Grid>
                                    <TextBlock x:Name="SoundTextBox" Width="165" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Text="Включено" Background="Transparent" Foreground="White" FontSize="22" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold"/>
                                    <CheckBox x:Name="SoundButton" Width="20" Height="20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="140,0,0,0" IsChecked="False" BorderThickness="3" BorderBrush="White" Background="Transparent" Style="{DynamicResource CheckBoxStyle}" />
                                </Grid>
                            </Border>

                            <Label HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,-260,145,0" Content="Ярлык:" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold" Foreground="White" FontSize="16"/>
                            <Border Width="190" Height="45" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,-185,20,0" Background="#e06b15" CornerRadius="10" BorderThickness="3" BorderBrush="White">
                                <Grid>
                                    <TextBlock x:Name="LinkTextBox" Width="165" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Text="Создать" Background="Transparent" Foreground="White" FontSize="22" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold"/>
                                    <CheckBox x:Name="LinkButton" Width="20" Height="20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="140,0,0,0" IsChecked="False" BorderThickness="3" BorderBrush="White" Background="Transparent" Style="{DynamicResource CheckBoxStyle}" Checked="LinkButton_Checked" Unchecked="LinkButton_Unchecked" />
                                </Grid>
                            </Border>

                            <Border x:Name="Accept" Width="130" Height="38" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,230,0,0" Background="#e06b15" CornerRadius="10" BorderThickness="3" BorderBrush="White">
                                <Grid>
                                    <Label HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Content="Применить" Foreground="White" FontFamily="/TensorMine;component/Resources/#Gilroy" FontWeight="SemiBold" FontSize="17"/>
                                    <Button x:Name="AcceptButton" Margin="0,0,0,0" Opacity="0" Click="AcceptButton_Click">
                                        <Button.Triggers>
                                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation From="130" To="140" Storyboard.TargetProperty="Width" Storyboard.TargetName="Accept" Duration="0:0:0.1"></DoubleAnimation>
                                                        <DoubleAnimation From="38" To="42" Storyboard.TargetProperty="Height" Storyboard.TargetName="Accept" Duration="0:0:0.1"></DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>

                                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation From="140" To="130" Storyboard.TargetProperty="Width" Storyboard.TargetName="Accept" Duration="0:0:0.1"></DoubleAnimation>
                                                        <DoubleAnimation From="42" To="38" Storyboard.TargetProperty="Height" Storyboard.TargetName="Accept" Duration="0:0:0.1"></DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Button.Triggers>
                                    </Button>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </Grid>
            </Border>


            <Border x:Name="UIExit" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="760,-320,0,0">
                <Grid>
                    <Viewbox x:Name="ExitIcon" Width="28" Height="28" RenderTransformOrigin="0.5, 0.5">
                        <Viewbox.RenderTransform>
                            <RotateTransform x:Name="ExitIconTransform" />
                        </Viewbox.RenderTransform>

                        <Canvas Width="24" Height="24">
                            <Path Fill="White" Data="M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z" />
                        </Canvas>
                    </Viewbox>

                    <Button x:Name="ExitButton" Width="22" Height="22" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Opacity="0" Click="ExitButton_Click">
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="28" To="32" Storyboard.TargetProperty="Width" Storyboard.TargetName="ExitIcon" Duration="0:0:0.1"></DoubleAnimation>
                                        <DoubleAnimation From="28" To="32" Storyboard.TargetProperty="Height" Storyboard.TargetName="ExitIcon" Duration="0:0:0.1"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="32" To="28" Storyboard.TargetProperty="Width" Storyboard.TargetName="ExitIcon" Duration="0:0:0.1"></DoubleAnimation>
                                        <DoubleAnimation From="32" To="28" Storyboard.TargetProperty="Height" Storyboard.TargetName="ExitIcon" Duration="0:0:0.1"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                </Grid>
            </Border>

        </Grid>
    </Border>


    <Window.Resources>
        <ResourceDictionary>
            <TextBlock x:Key="MainCursor" Cursor="Resources/main.cur"/>


            <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Background" Value="Green"/>
                <Setter Property="Foreground" Value="Transparent"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderBrush="White" BorderThickness="4">
                                <Grid Width="10" Height="10" >
                                    <Rectangle Fill="{TemplateBinding Background}"/>
                                    <TextBlock Foreground="{TemplateBinding Foreground}" Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Text="✓"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Red"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SwitchStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="OnChecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="32" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OnUnchecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <DockPanel x:Name="dockPanel">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center" />
                                <Grid>
                                    <Border x:Name="BackgroundBorder" BorderThickness="3" BorderBrush="White" CornerRadius="12" Height="27" Width="60">
                                        <Border.Background>
                                            <SolidColorBrush Color="#2e2e2e"/>
                                        </Border.Background>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                        </Grid>
                                    </Border>
                                    <Border BorderBrush="#FF939393" HorizontalAlignment="Left" VerticalAlignment="Center" x:Name="slider" Width="16" Height="16" BorderThickness="0" CornerRadius="20" RenderTransformOrigin="0.5,0.5" Margin="18,0,0,0">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="0" />
                                                <TranslateTransform X="0" Y="0" />
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.Background>
                                            <SolidColorBrush Color="White"/>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard" />
                                    </Trigger.EnterActions>
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="#2e2e2e" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <!-- ToDo: Add Style for Isenabled == False -->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
</Window>


